{"name": "test_invalidLogin[safari]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_practice2.Test_Orange object at 0x11001ab80>\n\n    @allure.description(\"Validates OrangeHRM with invalid login credentials\")\n    @allure.severity(severity_level=\"NORMAL\")\n    def test_invalidLogin(self):\n        self.loginPage = LoginPage(self.driver)\n        self.loginPage.enter_invalid_username()\n        self.loginPage.enter_invalid_password()\n        self.loginPage.click_login_button()\n        self.dashboardPage = DashboardPage(self.driver)\n        try:\n>           assert self.dashboardPage.is_dashboard_url_valid()\n\nTestcase/test_practice2.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage/DashboardPage.py:18: in is_dashboard_url_valid\n    return self.isURLValid(self.dashboard_url_text)\nPage/BasePage.py:21: in isURLValid\n    isURLValid = self.webDriverWait.until(EC.url_contains(URLText))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6AAEDCF5-B344-42CE-A39C-92BA966AC91E\")>\nmethod = <selenium.webdriver.support.expected_conditions.url_contains object at 0x1100e0580>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../SampleProject/venv/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "description": "Validates OrangeHRM with invalid login credentials", "attachments": [{"name": "Invalid Credentials", "source": "ea6783f0-eef2-495c-980d-b5c5f1a54eb6-attachment.png", "type": "image/png"}], "parameters": [{"name": "init_driver", "value": "'safari'"}], "start": 1604933837128, "stop": 1604933847866, "uuid": "53d0e245-70f4-4ab6-8e33-a791177e3d6e", "historyId": "750d5149fe6e1b3fe45a76f82b32bc88", "testCaseId": "c2bac5c53f4da96f108b3996ad4bae27", "fullName": "Testcase.test_practice2.Test_Orange#test_invalidLogin", "labels": [{"name": "severity", "value": "NORMAL"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Testcase"}, {"name": "suite", "value": "test_practice2"}, {"name": "subSuite", "value": "Test_Orange"}, {"name": "host", "value": "silviadeMBP.fios-router.home"}, {"name": "thread", "value": "25125-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcase.test_practice2"}]}